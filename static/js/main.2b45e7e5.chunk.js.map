{"version":3,"sources":["components/ContactForm/contactForm.module.css","components/Logo/logo.module.css","components/main.module.css","transitions/fade.module.css","components/ContactList/contactList.module.css","components/SearchForm/searchForm.module.css","redux/contactFormNameReduce.js","redux/phonebookActions.js","redux/contactFormNumberReduce.js","redux/contactFormReduce.js","redux/store.js","components/Logo/logo.js","components/ContactForm/contactForm.js","components/ContactForm/contactFormContainer.js","components/SearchForm/searchForm.js","components/SearchForm/searchFormContainer.js","components/ContactList/contactList.js","components/ContactList/contactListContainer.js","components/DublicateNotification/dublicateNotification.js","components/App.js","index.js","transitions/slide.module.css","components/DublicateNotification/dublicate.module.css"],"names":["module","exports","nameToAdd","createAction","nameToClear","nameReducer","createReducer","state","action","payload","Type","filterName","e","target","value","numberToAdd","numberToClear","contactFormToAdd","id","name","number","contactLocalDBAdd","deleteContact","numberReducer","type","initialState","contacts","filter","formReducer","concat","contact","store","configureStore","reducer","contactFormNameReduce","contactFormNumberReduce","contactFormReduce","delete","clear_input","localDbAdd","Logo","isLoad","CSSTransition","in","timeout","classNames","slideTransition","unmountOnExit","className","styles","rules","messages","alpha","ContactForm","resetError","setState","errors","persist","preventDefault","this","nameExist","toLowerCase","nameAlreadyExist","numberExist","numberAlreadyExist","length","validateAll","then","data","props","onSubmitForm","shortid","generate","catch","formattedErrors","forEach","error","field","message","changeStatus","onChangeInputName","onChangeInputNumber","onSubmit","onContactToAdd","autoComplete","onChange","placeholder","Component","connect","dispatch","phoneBookActions","SearchForm","onChangeInputFilter","ContactList","nameFilter","undefined","includes","nameFiltered","TransitionGroup","component","map","item","key","onClick","onDeleteContact","DublicateNotification","status","fadeTransition","App","dublicate","handleChangeStatus","persistedContacts","localStorage","getItem","localStorageDbAdd","JSON","parse","prevProp","prevState","setTimeout","setItem","stringify","wrapper","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b45e7e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm-box\":\"contactForm_contactForm-box__ZG6O9\",\"contactForm-wrapper\":\"contactForm_contactForm-wrapper__2SRNB\",\"contactForm-input\":\"contactForm_contactForm-input__1cWik\",\"contactForm-input-title\":\"contactForm_contactForm-input-title__2zA03\",\"contactForm-btn\":\"contactForm_contactForm-btn__28LLa\",\"error\":\"contactForm_error__1ISdg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo-txt\":\"logo_logo-txt__2EzUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"main_wrapper__1egyE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__2I-f8\",\"enterActive\":\"fade_enterActive__R8wOf\",\"exit\":\"fade_exit__DGUkl\",\"exitActive\":\"fade_exitActive__u5vNf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList-ul\":\"contactList_contactList-ul__zxJV2\",\"contactList-item-box\":\"contactList_contactList-item-box__2TPPl\",\"contactList-item-wrapper\":\"contactList_contactList-item-wrapper__25qsN\",\"contactList-item-name\":\"contactList_contactList-item-name__3CGaO\",\"contactList-item-number\":\"contactList_contactList-item-number__2qAVE\",\"contactList-item-btn\":\"contactList_contactList-item-btn__UHTSC\",\"contactList-btn-delete\":\"contactList_contactList-btn-delete__1aVQU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm-box\":\"searchForm_searchForm-box__18-1w\",\"searchForm-wrapper\":\"searchForm_searchForm-wrapper__36c_2\",\"searchForm-input\":\"searchForm_searchForm-input__3qFTp\",\"searchForm-input-title\":\"searchForm_searchForm-input-title__3R_vP\"};","\r\n\r\nimport { createAction, createReducer } from '@reduxjs/toolkit';\r\n// Action creators\r\nconst nameToAdd = createAction('NAME_ADD');\r\nconst nameToClear = createAction('NAME_CLEAR');\r\n\r\nconst nameReducer = createReducer(0, {\r\n    [nameToAdd]: (state, action) => action.payload,\r\n    [nameToClear]: (state, action) => action.payload,\r\n});\r\n\r\n\r\nexport default nameReducer;\r\n\r\n\r\n/* import { Type } from './phonebookActions.js'\r\n\r\nconst nameReducer = (state = \"\", action) => {\r\n    switch (action.type) {\r\n        case Type.NAME_ADD:\r\n            return action.payload\r\n\r\n        case Type.NAME_CLEAR:\r\n            return action.payload\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default nameReducer; */\r\n\r\n\r\n\r\n\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const Type = {\r\n    NAME_ADD: 'NAME_ADD',\r\n    NUMBER_ADD: 'NUMBER_ADD',\r\n    FORM_ADD: \"FORM_ADD\",\r\n    DELETE_CONTACT: \"DELETE_CONTACT\",\r\n    FILTER_VALUE: 'FILTER_VALUE',\r\n    NAME_CLEAR: \"NAME_CLEAR\",\r\n    NUMBER_CLEAR: \"NUMBER_CLEAR\",\r\n    FORM_LOCAL_ADD: \"FORM_LOCAL_ADD\"\r\n}\r\n//Код без использования Redux Toolkit\r\n/* export const filterName = e => ({\r\n    type: \"FILTER_VALUE\",\r\n    filter: e.target.value,\r\n})\r\n */\r\n\r\n\r\n/* export const nameToAdd = (e) => ({\r\n    type: Type.NAME_ADD,\r\n    name: e.target.value\r\n}) */\r\n\r\n/* export const nameToClear = () => ({\r\n    type: Type.NAME_CLEAR,\r\n    name: \"\"\r\n}) */\r\n\r\n/* export const numberToClear = () => ({\r\n    type: Type.NUMBER_CLEAR,\r\n    number: \"\"\r\n})\r\n\r\n\r\n\r\nexport const numberToAdd = (e) => ({\r\n    type: Type.NUMBER_ADD,\r\n    number: e.target.value\r\n\r\n}) */\r\n\r\n/* export const contactFormToAdd = (id, name, number) => ({\r\n    type: Type.FORM_ADD,\r\n    id: id,\r\n    name: name,\r\n    number: number\r\n}) */\r\n\r\n/* export const contactLocalDBAdd = (value) => ({\r\n    type: Type.FORM_LOCAL_ADD,\r\n    payload: value\r\n}) */\r\n\r\n/* export const deleteContact = (id) => ({\r\n    type: 'DELETE_CONTACT',\r\n    payload: id\r\n}); */\r\n\r\n\r\n\r\n//Код c использованием Redux Toolkit\r\nexport const filterName = createAction('FILTER_VALUE', function prepare(e) {\r\n    return {\r\n        payload: e.target.value,\r\n    }\r\n})\r\n\r\n\r\nexport const nameToAdd = createAction('NAME_ADD', function prepare(e) {\r\n    return {\r\n        payload: e.target.value,\r\n    }\r\n})\r\n\r\nexport const nameToClear = createAction('NAME_CLEAR', function prepare(e) {\r\n    return {\r\n        payload: \"\",\r\n    }\r\n})\r\n\r\nexport const numberToAdd = createAction('NUMBER_ADD', function prepare(e) {\r\n    return {\r\n        payload: e.target.value,\r\n    }\r\n})\r\n\r\nexport const numberToClear = createAction('NUMBER_CLEAR', function prepare(e) {\r\n    return {\r\n        payload: \"\",\r\n    }\r\n})\r\n\r\nexport const contactFormToAdd = createAction('FORM_ADD', function prepare(id, name, number) {\r\n    return {\r\n        payload: {\r\n            id: id,\r\n            name: name,\r\n            number: number\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport const contactLocalDBAdd = createAction('FORM_LOCAL_ADD', function prepare(value) {\r\n    return {\r\n        payload: value\r\n    }\r\n\r\n})\r\n\r\nexport const deleteContact = createAction('DELETE_CONTACT', function prepare(id) {\r\n    return {\r\n        payload: id\r\n    }\r\n\r\n})\r\n\r\n","import { Type } from './phonebookActions.js'\r\n\r\nconst numberReducer = (state = \"\", action) => {\r\n    switch (action.type) {\r\n\r\n        case Type.NUMBER_ADD:\r\n            return action.payload\r\n\r\n        case Type.NUMBER_CLEAR:\r\n            return action.payload\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default numberReducer;","import { Type } from './phonebookActions.js'\r\n\r\nconst initialState = ({\r\n    contacts: [],\r\n    filter: \"\"\r\n});\r\n\r\nconst formReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case Type.FORM_LOCAL_ADD:\r\n            return {\r\n                contacts: action.payload\r\n\r\n            }\r\n\r\n        case Type.FORM_ADD:\r\n            return {\r\n                ...state.contacts,\r\n                contacts: state.contacts.concat([{ id: action.payload.id, name: action.payload.name, number: action.payload.number }])\r\n\r\n            }\r\n\r\n        case Type.DELETE_CONTACT:\r\n            return {\r\n                ...state.contacts,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            }\r\n\r\n        case Type.FILTER_VALUE:\r\n            return {\r\n                ...state,\r\n                filter: action.payload,\r\n            }\r\n\r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default formReducer;\r\n","/* import { createStore, combineReducers } from 'redux'; */ //Код без использования Redux Toolkit\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n/* import { devToolsEnhancer } from 'redux-devtools-extension'; */ //Код без использования Redux Toolkit\r\nimport contactFormNameReduce from \"./contactFormNameReduce.js\";\r\nimport contactFormNumberReduce from \"./contactFormNumberReduce.js\";\r\nimport contactFormReduce from \"./contactFormReduce.js\";\r\n\r\n//Код без использования Redux Toolkit\r\n/* const rootReducer = combineReducers({\r\n    name: contactFormNameReduce,\r\n    number: contactFormNumberReduce,\r\n    contacts: contactFormReduce,\r\n    delete: contactFormReduce,\r\n    filter: contactFormReduce,\r\n    clear_input: contactFormNameReduce,\r\n    localDbAdd: contactFormReduce,\r\n})\r\n\r\nconst store = createStore(rootReducer, devToolsEnhancer()); */\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        name: contactFormNameReduce,\r\n        number: contactFormNumberReduce,\r\n        contacts: contactFormReduce,\r\n        delete: contactFormReduce,\r\n        filter: contactFormReduce,\r\n        clear_input: contactFormNameReduce,\r\n        localDbAdd: contactFormReduce,\r\n    },\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport styles from './logo.module.css';\r\nimport slideTransition from '../../transitions/slide.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Logo = (isLoad) =>\r\n    <CSSTransition in={isLoad.isLoad} timeout={1000} classNames={slideTransition} unmountOnExit>\r\n\r\n        <h1 className={styles[\"logo-txt\"]}>Phonebook</h1>\r\n\r\n    </CSSTransition>\r\n\r\nexport default Logo;\r\n\r\nLogo.propTypes = {\r\n    isLoad: PropTypes.bool.isRequired,\r\n};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport styles from './contactForm.module.css';\r\nimport { validateAll } from 'indicative/validator';\r\n\r\nconst rules = {\r\n    name: 'required|alpha',\r\n    number: 'required|number',\r\n};\r\n\r\nconst messages = {\r\n    alpha: 'Name must contain letters only!!',\r\n    number: 'Phone must contain numeral only!!',\r\n    'name.required': 'this field is required',\r\n    'number.required': 'this field is required',\r\n};\r\n\r\nconst nameAlreadyExist = (name, contacts) => {\r\n    return contacts.filter(\r\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n};\r\nconst numberAlreadyExist = (number, contacts) => {\r\n    return contacts.filter(\r\n        contact => contact.number.toLowerCase() === number.toLowerCase(),\r\n    );\r\n};\r\n\r\nexport default class ContactForm extends Component {\r\n\r\n    onContactToAdd(e, name, number, contacts, errors) {\r\n        e.persist()\r\n        e.preventDefault();\r\n\r\n        if (errors) {\r\n            this.resetError();\r\n        }\r\n        const nameExist = nameAlreadyExist(name, contacts);\r\n        const numberExist = numberAlreadyExist(number, contacts);\r\n\r\n        if ((nameExist.length !== 0) && (numberExist.length !== 0)) {\r\n            this.props.changeStatus()\r\n            return\r\n        }\r\n\r\n        validateAll({ name, number }, rules, messages)\r\n\r\n            .then(data => {\r\n                this.props.onSubmitForm(e, shortid.generate(), name, number);\r\n                this.props.nameToClear();\r\n                this.props.numberToClear();\r\n            })\r\n            .catch(errors => {\r\n\r\n\r\n\r\n                const formattedErrors = {};\r\n                errors.forEach(error => {\r\n                    formattedErrors[error.field] = error.message;\r\n                });\r\n                this.setState({ errors: formattedErrors });\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n    resetError = () => {\r\n        this.setState({\r\n            errors: {\r\n                ...this.state.errors,\r\n                name: null,\r\n                number: null\r\n            }\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { name, number, onChangeInputName, onChangeInputNumber } = this.props;\r\n        const errors = this.state;\r\n\r\n        return (\r\n\r\n            <div className={styles['contactForm-box']}>\r\n                <div className={styles['contactForm-wrapper']}>\r\n                    <form onSubmit={(e) => this.onContactToAdd(e, this.props.name, this.props.number, this.props.contacts, errors)} >\r\n                        <label>\r\n                            <p className={styles['contactForm-input-title']}>Name</p>\r\n                            <input\r\n                                type=\"text\"\r\n                                className={styles['contactForm-input']}\r\n                                name=\"name\"\r\n                                value={name}\r\n                                autoComplete=\"off\"\r\n                                onChange={onChangeInputName}\r\n                                placeholder=\"Type contact name...\"\r\n                            />\r\n                            {errors && <span className={styles.error}>{this.state.errors.name}</span>}\r\n                        </label>\r\n\r\n\r\n                        <label>\r\n                            <p className={styles['contactForm-input-title']}>Number</p>\r\n                            <input\r\n                                type=\"text\"\r\n                                className={styles['contactForm-input']}\r\n                                name=\"number\"\r\n                                value={number}\r\n                                autoComplete=\"off\"\r\n                                onChange={onChangeInputNumber}\r\n                                placeholder=\"Type contact number...\"\r\n                            />\r\n                            {errors && <span className={styles.error}>{this.state.errors.number}</span>}\r\n                        </label>\r\n                        <div className={styles['contactForm-btn-box']}>\r\n                            <button type=\"submit\" className={styles['contactForm-btn']}>Add contact</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div >\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onSubmitForm: PropTypes.func.isRequired,\r\n    onChangeInputName: PropTypes.func.isRequired,\r\n    onChangeInputNumber: PropTypes.func.isRequired,\r\n    nameToClear: PropTypes.func.isRequired,\r\n    numberToClear: PropTypes.func.isRequired,\r\n    onError: PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n    }),\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }),\r\n    ),\r\n};","import * as phoneBookActions from \"../../redux/phonebookActions.js\";\r\nimport { connect } from 'react-redux';\r\nimport ContactForm from './contactForm.js';\r\n\r\nconst mapStateToProps = state => ({\r\n    name: state.name,\r\n    number: state.number,\r\n    contacts: state.contacts.contacts,\r\n})\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    onChangeInputName: (e) => dispatch(phoneBookActions.nameToAdd(e)),\r\n    onChangeInputNumber: (e) => dispatch(phoneBookActions.numberToAdd(e)),\r\n    nameToClear: () => dispatch(phoneBookActions.nameToClear()),\r\n    numberToClear: () => dispatch(phoneBookActions.numberToClear()),\r\n    onSubmitForm: (e, id, name, number) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            phoneBookActions.contactFormToAdd(id, name, number)\r\n        );\r\n\r\n    }\r\n\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)","import React from 'react';\r\nimport styles from './searchForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SearchForm = ({ filter, onChangeInputFilter }) => (\r\n    <div className={styles['searchForm-box']}>\r\n        <div className={styles['searchForm-wrapper']}>\r\n            <p className={styles['searchForm-input-title']}>Find contacts by name</p>\r\n            <input\r\n                type=\"text\"\r\n                className={styles['searchForm-input']}\r\n                placeholder=\"Type to filter names...\"\r\n                value={filter}\r\n                onChange={(e) => onChangeInputFilter(e)}\r\n            ></input>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default SearchForm;\r\n\r\nSearchForm.propTypes = {\r\n    filter: PropTypes.string,\r\n    onChangeInputFilter: PropTypes.func.isRequired,\r\n};","import * as phoneBookActions from \"../../redux/phonebookActions.js\";\r\nimport { connect } from 'react-redux';\r\nimport SearchForm from './searchForm.js';\r\n\r\nconst mapStateToProps = state => ({\r\n    filter: state.contacts.filter,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onChangeInputFilter: (e) => dispatch(phoneBookActions.filterName(e)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm)","import React, { Component } from 'react';\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\"\r\nimport slideTransition from '../../transitions/slide.module.css';\r\nimport styles from './contactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport default class ContactList extends Component {\r\n    nameFilter = (filter, contacts) => {\r\n        if (filter !== undefined) {\r\n            return (\r\n                contacts.filter(contact =>\r\n                    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n                ));\r\n        }\r\n        return contacts\r\n    }\r\n\r\n    render() {\r\n        const nameFiltered = this.nameFilter(this.props.filter, this.props.contacts);\r\n\r\n        return (\r\n            < div >\r\n                <TransitionGroup component=\"ul\" className={styles['contactList-ul']}>\r\n                    {nameFiltered.map(item => (\r\n                        <CSSTransition key={item.id} timeout={1000} classNames={slideTransition} unmountOnExit>\r\n                            <li className={styles['contactList-item-box']}>\r\n                                <div className={styles['contactList-item-wrapper']}>\r\n                                    <div className={styles['contactList-item-name']}>{item.name}</div>\r\n                                    <div className={styles['contactList-item-number']}>{item.number}</div>\r\n                                    <div className={styles['contactList-item-btn']}>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            name=\"delte\"\r\n                                            onClick={() => this.props.onDeleteContact(item.id)}\r\n                                            className={styles['contactList-btn-delete']}\r\n                                        >\r\n                                            X\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </CSSTransition>\r\n                    ))}\r\n\r\n                </TransitionGroup>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nContactList.propTypes = {\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n    filter: PropTypes.string,\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }),\r\n    ),\r\n};","import * as phoneBookActions from \"../../redux/phonebookActions.js\";\r\nimport { connect } from 'react-redux';\r\nimport ContactList from './contactList.js';\r\n\r\nconst mapStateToProps = state => ({\r\n    contacts: state.contacts.contacts,\r\n    filter: state.contacts.filter,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onDeleteContact: (e, id) => dispatch(phoneBookActions.deleteContact(e, id)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)","import React from 'react';\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport fadeTransition from '../../transitions/fade.module.css';\r\nimport styles from './dublicate.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DublicateNotification = (status) => (\r\n\r\n    < CSSTransition in={status.status} timeout={1000} classNames={fadeTransition} unmountOnExit>\r\n        <div className={styles['dublicate-box']}><p className={styles['dublicate-txt']}>Contact already exist!</p></div>\r\n    </CSSTransition >\r\n\r\n);\r\n\r\nexport default DublicateNotification;\r\n\r\nDublicateNotification.propTypes = {\r\n    status: PropTypes.bool.isRequired,\r\n};","import React, { Component, Fragment } from 'react';\r\nimport Logo from './Logo/logo.js';\r\nimport styles from './main.module.css';\r\nimport ContactForm from './ContactForm/contactFormContainer.js';\r\nimport SearchForm from \"./SearchForm/searchFormContainer\";\r\nimport ContactList from \"./ContactList/contactListContainer.js\";\r\nimport DublicateNotification from \"./DublicateNotification/dublicateNotification.js\";\r\nimport * as phoneBookActions from \"../redux/phonebookActions.js\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n        isLoad: false,\r\n        dublicate: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoad: true })\r\n        const persistedContacts = localStorage.getItem(\"contacts\");\r\n\r\n        if (persistedContacts) {\r\n            this.props.localStorageDbAdd(JSON.parse(persistedContacts))\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProp, prevState) {\r\n        if (prevState.dublicate !== this.state.dublicate) {\r\n            setTimeout(() => { this.setState({ dublicate: false }) }, 3000)\r\n        }\r\n        if (prevProp.contacts !== this.props.contacts) {\r\n            localStorage.setItem('contacts', JSON.stringify(this.props.contacts))\r\n        }\r\n    }\r\n\r\n    handleChangeStatus = () => {\r\n        this.setState({ dublicate: true })\r\n    }\r\n\r\n    render() {\r\n        const { isLoad, dublicate } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className={styles.wrapper}>\r\n                    <Logo isLoad={isLoad} />\r\n                    <ContactForm\r\n                        changeStatus={this.handleChangeStatus}\r\n                    />\r\n                    {this.props.contacts.length > 1 &&\r\n                        <SearchForm />}\r\n                    <ContactList />\r\n                </div>\r\n                {dublicate &&\r\n                    <DublicateNotification status={dublicate} />}\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    contacts: state.contacts.contacts,\r\n    filter: state.contacts.filter,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    localStorageDbAdd: (value) => {\r\n        dispatch(\r\n            phoneBookActions.contactLocalDBAdd(value)\r\n        );\r\n    }\r\n\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store.js\";\nimport App from \"./components/App\";\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__TbiKr\",\"enterActive\":\"slide_enterActive__18lRw\",\"exit\":\"slide_exit__CIwpa\",\"exitActive\":\"slide_exitActive__1okDB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dublicate-box\":\"dublicate_dublicate-box__3pu_i\",\"dublicate-txt\":\"dublicate_dublicate-txt__3-O3z\"};"],"sourceRoot":""}